//: ## 泛型(Generics)
//: - 泛型所解决的问题
//: - 泛型函数
//: - 类型参数
//: - 命名类型参数
//: - 泛型类型
//: - 扩展一个泛型类型
//: - 类型约束
//: - 关联类型
//: - Where 子句

//: 泛型代码让你能够根据自定义的需求，编写出适用于任意类型、灵活可重用的函数及类型。它能让你避免代码的重复，用一种清晰和抽象的方式来表达代码的意图。

//: 泛型是 `Swift` 最强大的特性之一，许多 `Swift` 标准库是通过泛型代码构建的。事实上，泛型的使用贯穿了整本语言手册，只是你可能没有发现而已。例如，`Swift` 的 `Array` 和 `Dictionary` 都是泛型集合。你可以创建一个 `Int` 数组，也可创建一个 `String` 数组，甚至可以是任意其他 `Swift` 类型的数组。同样的，你也可以创建存储任意指定类型的字典。