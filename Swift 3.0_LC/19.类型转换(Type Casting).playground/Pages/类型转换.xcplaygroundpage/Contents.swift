//: ## 类型转换(Type Casting)
//: - 1 为类型转换定义类层次
//: - 2 类型检查
//: - 3 向下类型转换
//: - 4 Any 和 AnyObject 的类型转换
//: - 4.1 AnyObject
//: - 4.2 Any

/*: 类型转换可以判断实例的类型，也可以将该实例在其所在的类层次中视为其父类或子类的实例。

Swift 中类型转换的实现为 is 和 as 操作符。这两个操作符使用了一种简单传神的方式来检查一个值的类型或将某个值转换为另一种类型。

如同协议实现的检查（此处应有链接）中描述的那样，你还可以使用类型转换来检查类型是否遵循某个协议。
 */

//: [下一页](@next)
