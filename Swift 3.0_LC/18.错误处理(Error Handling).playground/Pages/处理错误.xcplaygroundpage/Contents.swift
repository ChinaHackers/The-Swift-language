//: ## 处理错误

//: - 当一个错误被抛出，周围的某些代码必须为处理错误响应——比如说，为了纠正错误，尝试替代方案，或者把错误通知用户。
//: - 在 Swift 中有四种方式来处理错误。你可以将来自函数的错误传递给调用函数的代码中，使用 do-catch 语句来处理错误，把错误作为可选项的值，或者错误不会发生的断言。每一种方法都在下边的章节中有详细叙述。
//: - 当函数抛出一个错误，它就改变了你程序的流，所以能够快速定位错误就显得格外重要。要定位你代码中的这些位置，使用 `try` 关键字——或者 `try?` 或 `try!` 变体——放在调用函数、方法或者会抛出错误的初始化器代码之前。这些关键字在下面的章节中有详细的描述。

//: >注意: `Swift` 中的错误处理， `try`, `catch`和 `throw` 的使用与其他语言中的异常处理很相仿。不同于许多语言中的异常处理——包括 `Objective-C ——Swift` 中的错误处理并不涉及调用堆栈展开，一个高占用过程。因此，`throw` 语句的性能特征与 `return` 比不差多少。

//: [上一页](@previous) | [下一页](@next)