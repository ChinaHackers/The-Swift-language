//: ## 扩展(Extensions)
//: - 1.扩展的语法
//: - 2.计算属性
//: - 3.初始化器
//: - 4.方法
//: - 4.1.可变实例方法
//: - 5.下标
//: - 6.内嵌类型

//: 扩展为现有的类、结构体、枚举类型、或协议添加了新功能。这也包括了为无访问权限的源代码扩展类型的能力（即所谓的逆向建模）。扩展和 Objective-C 中的分类类似。（与 Objective-C 的分类不同的是，Swift 的扩展没有名字。）

//:Swift 中的扩展可以：

//: - 添加计算实例属性和计算类型属性；
//: - 定义实例方法和类型方法；
//: - 提供新初始化器；
//: - 定义下标；
//: - 定义和使用新内嵌类型；
//: - 使现有的类型遵循某协议

//: 在 Swift 中，你甚至可以扩展一个协议，以提供其要求的实现或添加符合类型的附加功能。详见协议扩展。

//:> 注意: 扩展可以向一个类型添加新的方法，但是不能重写已有的方法。

