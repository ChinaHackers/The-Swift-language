//: ## 整数
//:整数就是没有小数部分的数字，比如 42 和 -23 。整数可以是有符号（正，零或者负），或者无符号（正数或零）。

//:> - Swift 提供了 8，16，32 和 64 位编码的有符号和无符号整数，这些整数类型的命名方式和 C 相似，例如 8 位无符号整数的类型是 UInt8 ，32 位有符号整数的类型是 Int32 。与 Swift 中的其他类型相同，这些整数类型也用开头大写命名法。
//: ---
//: ##### 整数范围
//你可以通过 min 和 max 属性来访问每个整数类型的最小值和最大值：
let minValue = UInt8.min // 最小值是 0, 值的类型是 UInt8
let maxValue = UInt8.max // 最大值是 255, 值得类型是 UInt8
//: ---
//: ##### Int
//: 在大多数情况下，你不需要在你的代码中为整数设置一个特定的长度。Swift提供了一个额外的整数类型: Int ，它拥有与当前平台的原生字相同的长度。
//: - 在32位平台上， Int 的长度和 Int32 相同。
//: - 在64位平台上， Int 的长度和 Int64 相同。
//: 除非你需操作特定长度的整数，否则请尽量在代码中使用 Int 作为你的整数的值类型。这样能提高代码的统一性和兼容性，即使在 32 位的平台上， Int 也可以存 -2,147,483,648 到 2,147,483,647 之间的任意值，对于大多数整数区间来说完全够用了。

//: ---
//: ##### UInt
//: Swift 也提供了一种无符号的整数类型， UInt ，它和当前平台的原生字长度相同。
//: - 在32位平台上， UInt 长度和 UInt32 长度相同。
//: - 在64位平台上， UInt 长度和 UInt64 长度相同。

//: [Next](@next)
